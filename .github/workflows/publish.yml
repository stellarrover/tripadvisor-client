name: Publish to NPM

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version type to bump'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      dry_run:
        description: 'Dry run (do not actually publish)'
        required: false
        default: false
        type: boolean

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: main
    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          scope: '@felixliu'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run type checking
        run: pnpm run type-check

      - name: Run linting
        run: pnpm run lint

      - name: Run tests
        run: pnpm run test:coverage

      - name: Build project
        run: pnpm run build

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version
        id: bump-version
        run: |
          if [ "${{ inputs.dry_run }}" = "true" ]; then
            echo "DRY RUN: Would bump version to ${{ inputs.version_type }}"
            echo "new_version=dry-run" >> $GITHUB_OUTPUT
          else
            # Get current version
            CURRENT_VERSION=$(node -p "require('./package.json').version")
            echo "Current version: $CURRENT_VERSION"
            
            # Bump version using pnpm
            pnpm version ${{ inputs.version_type }} --no-git-tag-version
            
            # Get new version
            NEW_VERSION=$(node -p "require('./package.json').version")
            echo "New version: $NEW_VERSION"
            echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
            
            # Commit version bump
            git add package.json
            git commit -m "chore: bump version to $NEW_VERSION"
          fi

      - name: Create and push tag
        if: inputs.dry_run == false
        run: |
          NEW_VERSION="${{ steps.bump-version.outputs.new_version }}"
          git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
          git push origin "v$NEW_VERSION"

      - name: Publish to NPM
        if: inputs.dry_run == false
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          pnpm publish --no-git-checks
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push version bump commit
        if: inputs.dry_run == false
        run: |
          git push origin main

      - name: Create Release
        if: inputs.dry_run == false
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump-version.outputs.new_version }}
          release_name: Release v${{ steps.bump-version.outputs.new_version }}
          draft: false
          prerelease: false
